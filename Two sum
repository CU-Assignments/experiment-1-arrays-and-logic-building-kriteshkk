class Solution {
    public int[] twoSum(int[] nums, int target) {
        java.util.HashMap<Integer, Integer> numMap = new java.util.HashMap<>();
        
        for (int i = 0; i < nums.length; i++) {
            int complement = target - nums[i];
            
            if (numMap.containsKey(complement)) {
                return new int[] { numMap.get(complement), i };
            }
            
            numMap.put(nums[i], i);
        }
        
       
        throw new IllegalArgumentException("No two sum solution");
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        int[] result1 = solution.twoSum(new int[] {2, 7, 11, 15}, 9);
        System.out.println(java.util.Arrays.toString(result1)); // Output: [0, 1]
        
        int[] result2 = solution.twoSum(new int[] {3, 2, 4}, 6);
        System.out.println(java.util.Arrays.toString(result2)); // Output: [1, 2]
        
        int[] result3 = solution.twoSum(new int[] {3, 3}, 6);
        System.out.println(java.util.Arrays.toString(result3)); // Output: [0, 1]
    }
}
